<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GestaoDePessoas.API</name>
    </assembly>
    <members>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Categorias.CategoriaController.Post(GestaoDePessoas.Application.ViewModels.Categoria.CategoriaAdicionarViewModel)">
             <summary>
             Cadastra nova Categoria.
             </summary>
             <param name="viewmodel">View Model de Categoria.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/categoria
                 {
                   "nome": "Doces"
                 }
                 
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);   
                
                 A aplicação impõe uma restrição que permite o cadastro do nome da categoria uma única vez. 
                 
                 Isso garante a unicidade dos registros e impede duplicações no sistema.
                 
             </remarks>
             <response code="201">Novo registro de Categoria criado.</response>
             <response code="400">Não foi possível criar o registro de Categoria.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Categorias.CategoriaController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.Categoria.CategoriaAtualizarViewModel)">
             <summary>
             Atualiza registro Categoria. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Categoria.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/categoria/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "ativo": true,
                   "nome": "Doces"
                 }
                 
                 id -> É obrigatório;
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
                 
             </remarks>
             <response code="200">Registro de Categoria atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Categoria.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Categorias.CategoriaController.Delete(System.Guid)">
             <summary>
             Exclui registro de Categoria.
             </summary>
             <param name="id">Identificador (guid) do registro de Categoria.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/categoria/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Categorias.CategoriaController.Get(System.Guid)">
             <summary>
             Retorna Categoria especifico por Id (guid).
             </summary>
             <param name="id">Identificador (guid) do registro de Categoria.</param>
             <returns></returns>
             <response code="200">Registro de Categoria correspondente ao Id.</response>
             <response code="400">Não foi possível localizar o registro de Categoria.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Categorias.CategoriaController.GetPorTodosOsFiltros(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             Retorna lista paginada de Categorias.
             </summary>
             <returns></returns>
             <param name="nome">Nome.</param>
             <param name="pagina">Página da lista de item.</param>
             <param name="tamanhoPagina">Total de itens por página.</param>
             <param name="ordem">Ordenação: Id, Nome, DataCadastro.</param>
             <response code="200">O recurso solicitado foi processado e retornado com sucesso.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Post(GestaoDePessoas.Application.ViewModels.Cliente.ClienteAdicionarViewModel)">
             <summary>
             Cadastra novo Cliente.
             </summary>
             <param name="viewmodel">View Model de Cliente.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/cliente
                 {
                   "nome": "João Pedro Lima",
                   "razao": "João Pedro",
                   "cnpJ_CPF": "00.000.000/0001-19",
                   "contatos": [
                     {
                         "tipocontato": 1,
                         "valorcontato": "63992548563",
                         "descricao": "Meu telefone."
                     },
                     {
                         "tipocontato": 2,
                         "valorcontato": "joaopedro@gmail.com",
                         "descricao": "Meu e-mail."
                     }
                   ],
                   "enderecos": [
                     {
                         "numero": 914,
                         "codigopostal": 1462,
                         "cep": "77790000",
                         "estado": "TO",
                         "cidade": "Araguaína",
                         "bairro": "Centro",
                         "rua": "Rua Sadoc Correia"
                     }
                   ]
                 }
                 
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
                 razao -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
                 cnpJ_CPF -> Deve ter no mínimo 11 e no máximo 18 caracteres (É obrigatório);
                 
                 contatos -> tipocontato -> É obrigatório ([1] Para Telefone | [2] Para E-mail);
                             valorcontato > Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                             descricao -> Deve ter no mínimo 1 e no máximo 50 caracteres (É opcional);
                             
                 enderecos -> numero -> Deve ter no máximo 50 caracteres (É opcional);
                              codigopostal -> Deve ter no máximo 50 caracteres (É opcional);  
                              cep -> Deve ter no mínimo 8 e no máximo 9 caracteres (É obrigatório);
                              estado -> Deve ter no mínimo 1 e no máximo 50 caracteres (É obrigatório);
                              cidade -> Deve ter no mínimo 1 e no máximo 100 caracteres (É obrigatório);
                              bairro -> Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                              rua -> Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                
                 A aplicação impõe uma restrição que permite o cadastro de um número de CPF ou CNPJ uma única vez. 
                 Isso garante a unicidade dos registros e impede duplicações no sistema.
                 
                 Obs: Certifique-se de inserir um número de CPF ou CNPJ válido e único para cada registro.
                 
             </remarks>
             <response code="201">Novo registro de Cliente criado.</response>
             <response code="400">Não foi possível criar o registro de Cliente.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Post(GestaoDePessoas.Application.ViewModels.Endereco.EnderecoAdicionarViewModel)">
             <summary>
             Cadastra novo Endereço Cliente.
             </summary>
             <param name="viewmodel">View Model de Endereço Cliente.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/cliente/cliente-endereco
                 {
                   "clienteID" : "00000000-0000-0000-0000-000000000000",
                   "numero": 914,
                   "codigopostal": 1462,
                   "cep": "77790000",
                   "estado": "TO",
                   "cidade": "Araguaína",
                   "bairro": "Centro",
                   "rua": "Rua Sadoc Correia"
                 } 
                 
                 clienteID -> É obrigatório;
                 numero -> Deve ter no máximo 50 caracteres (É opcional);
                 codigopostal -> Deve ter no máximo 50 caracteres (É opcional);  
                 cep -> Deve ter no mínimo 8 e no máximo 9 caracteres (É obrigatório);
                 estado -> Deve ter no mínimo 1 e no máximo 50 caracteres (É obrigatório);
                 cidade -> Deve ter no mínimo 1 e no máximo 100 caracteres (É obrigatório);
                 bairro -> Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                 rua -> Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                 
             </remarks>
             <response code="201">Novo registro de Endereço Cliente criado.</response>
             <response code="400">Não foi possível criar o registro de Endereço Cliente.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Post(GestaoDePessoas.Application.ViewModels.Contato.ContatoAdicionarViewModel)">
             <summary>
             Cadastra novo Contato Cliente.
             </summary>
             <param name="viewmodel">View Model de Contato Cliente.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/cliente/cliente-contato
                 {
                   "clienteID" : "00000000-0000-0000-0000-000000000000",
                   "tipocontato": 1,
                   "valorcontato": "63992548563",
                   "descricao": "Meu telefone."
                 } 
                 
                 clienteID -> É obrigatório;
                 tipocontato -> É obrigatório ([1] Para Telefone | [2] Para E-mail);
                 valorcontato > Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                 descricao -> Deve ter no mínimo 1 e no máximo 50 caracteres (É opcional);
                 
             </remarks>
             <response code="201">Novo registro de Contato Cliente criado.</response>
             <response code="400">Não foi possível criar o registro de Contato Cliente.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.Cliente.ClienteAtualizarViewModel)">
             <summary>
             Atualiza registro Cliente. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Cliente.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/cliente/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "ativo": true
                   "nome": "João Pedro Lima",
                   "razao": "João Pedro",
                   "cnpJ_CPF": "00.000.000/0001-19"
                 }
                 
                 id -> É obrigatório;
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
                 razao -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório); 
                 cnpJ_CPF -> Deve ter no mínimo 11 e no máximo 18 caracteres (É obrigatório);
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
                 
             </remarks>
             <response code="200">Registro de Cliente atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Cliente.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.Endereco.EnderecoAtualizarViewModel)">
             <summary>
             Atualiza registro Endereço Cliente. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Endereço Cliente.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/cliente/cliente-endereco/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "ativo": true
                   "numero": 914,
                   "codigopostal": 1462,
                   "cep": "77790000",
                   "estado": "TO",
                   "cidade": "Araguaína",
                   "bairro": "Centro",
                   "rua": "Rua Sadoc Correia"
                 }
                 
                 id -> É obrigatório;
                 numero -> Deve ter no máximo 50 caracteres (É opcional);
                 codigopostal -> Deve ter no máximo 50 caracteres (É opcional);  
                 cep -> Deve ter no mínimo 8 e no máximo 9 caracteres (É obrigatório);
                 estado -> Deve ter no mínimo 1 e no máximo 50 caracteres (É obrigatório);
                 cidade -> Deve ter no mínimo 1 e no máximo 100 caracteres (É obrigatório);
                 bairro -> Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                 rua -> Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
                 
             </remarks>
             <response code="200">Registro de Endereço Cliente atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Endereço Cliente.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.Contato.ContatoAtualizarViewModel)">
             <summary>
             Atualiza registro Contato Cliente. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Contato Cliente.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/cliente/cliente-contato/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "ativo": true
                   "tipocontato": 1,
                   "valorcontato": "63992548563",
                   "descricao": "Meu telefone."
                 }
                 
                 id -> É obrigatório;
                 tipocontato -> É obrigatório ([1] Para Telefone | [2] Para E-mail);
                 valorcontato > Deve ter no mínimo 1 e no máximo 150 caracteres (É obrigatório);
                 descricao -> Deve ter no mínimo 1 e no máximo 50 caracteres (É opcional);
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
                 
             </remarks>
             <response code="200">Registro de Contato Cliente atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Contato Cliente.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Delete(System.Guid)">
             <summary>
             Exclui registro de Cliente.
             </summary>
             <param name="id">Identificador (guid) do registro de Cliente.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/cliente/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.DeleteEndereco(System.Guid)">
             <summary>
             Exclui registro de Endereço Cliente.
             </summary>
             <param name="id">Identificador (guid) do registro de Endereço Cliente.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/cliente/cliente-endereco/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.DeleteContato(System.Guid)">
             <summary>
             Exclui registro de Contato Cliente.
             </summary>
             <param name="id">Identificador (guid) do registro de Contato Cliente.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/cliente/cliente-contato/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.Get(System.Guid)">
             <summary>
             Retorna Cliente especifico por Id (guid).
             </summary>
             <param name="id">Identificador (guid) do registro de Cliente.</param>
             <returns></returns>
             <response code="200">Registro de Cliente correspondente ao Id.</response>
             <response code="400">Não foi possível localizar o registro de Cliente.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Clientes.ClienteController.GetPorTodosOsFiltros(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             Retorna lista paginada de Clientes.
             </summary>
             <returns></returns>
             <param name="nome">Nome.</param>
             <param name="cnpJ_CPF">CPF ou CNPJ.</param>
             <param name="ativo">Status do registro Ativo ou Desativado.</param>
             <param name="pagina">Página da lista de item.</param>
             <param name="tamanhoPagina">Total de itens por página.</param>
             <param name="ordem">Ordenação: Id, Nome, CNPJ_CPF, Endereco, Bairro, DataCadastro.</param>
             <response code="200">O recurso solicitado foi processado e retornado com sucesso.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.FormaPagamentos.FormaPagamentoController.Post(GestaoDePessoas.Application.ViewModels.FormaPagamento.FormaPagamentoAdicionarViewModel)">
             <summary>
             Cadastra nova Forma de Pagamento.
             </summary>
             <param name="viewmodel">View Model de Forma de Pagamento.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/forma-pagamento
                 {
                   "taxa": 2.5,
                   "nome": "Cartão de Crédito",
                   "descricao": "Forma de pagamento para pagamentos no cartão de crédito."
                 }
                 
                 taxa -> É opcional;
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório); 
                 descricao -> Deve ter no mínimo 1 e no máximo 250 caracteres (É opcional);
                
                 A aplicação impõe uma restrição que permite o cadastro do nome da forma de pagamento uma única vez. 
                 
                 Isso garante a unicidade dos registros e impede duplicações no sistema.
                 
             </remarks>
             <response code="201">Novo registro de Forma de Pagamento criado.</response>
             <response code="400">Não foi possível criar o registro de Forma de Pagamento.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.FormaPagamentos.FormaPagamentoController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.FormaPagamento.FormaPagamentoAtualizarViewModel)">
             <summary>
             Atualiza registro Forma de Pagamento. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Forma de Pagamento.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/forma-pagamento/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "ativo": true,
                   "taxa": 2.5,
                   "nome": "Cartão de Crédito",
                   "descricao": "Forma de pagamento para pagamentos no cartão de crédito."
                 }
                 
                 id -> É obrigatório;
                 taxa -> É opcional;
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
                 descricao -> Deve ter no mínimo 1 e no máximo 250 caracteres (É opcional);
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
                 
             </remarks>
             <response code="200">Registro de Forma de Pagamento atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Forma de Pagamento.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.FormaPagamentos.FormaPagamentoController.Delete(System.Guid)">
             <summary>
             Exclui registro de Forma de Pagamento.
             </summary>
             <param name="id">Identificador (guid) do registro de Forma de Pagamento.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/forma-pagamento/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.FormaPagamentos.FormaPagamentoController.Get(System.Guid)">
             <summary>
             Retorna Forma de Pagamento especifico por Id (guid).
             </summary>
             <param name="id">Identificador (guid) do registro de Forma de Pagamento.</param>
             <returns></returns>
             <response code="200">Registro de Forma de Pagamento correspondente ao Id.</response>
             <response code="400">Não foi possível localizar o registro de Forma de Pagamento.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.FormaPagamentos.FormaPagamentoController.GetPorTodosOsFiltros(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             Retorna lista paginada de Formas de Pagamentos.
             </summary>
             <returns></returns>
             <param name="nome">Nome.</param>
             <param name="descricao">Descrição.</param>
             <param name="pagina">Página da lista de item.</param>
             <param name="tamanhoPagina">Total de itens por página.</param>
             <param name="ordem">Ordenação: Id, Nome, Descricao, DataCadastro.</param>
             <response code="200">O recurso solicitado foi processado e retornado com sucesso.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Marcas.MarcaController.Post(GestaoDePessoas.Application.ViewModels.Marca.MarcaAdicionarViewModel)">
             <summary>
             Cadastra nova Marca.
             </summary>
             <param name="viewmodel">View Model de Marca.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/marca
                 {
                   "nome": "Louis Vuitton"
                 }
                 
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);   
                
                 A aplicação impõe uma restrição que permite o cadastro do nome da marca uma única vez. 
                 Isso garante a unicidade dos registros e impede duplicações no sistema.
             </remarks>
             <response code="201">Novo registro de Marca criado.</response>
             <response code="400">Não foi possível criar o registro de Marca.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Marcas.MarcaController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.Marca.MarcaAtualizarViewModel)">
             <summary>
             Atualiza registro Marca. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Marca.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/marca/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "ativo": true,
                   "nome": "Louis Vuitton"
                 }
                 
                 id -> É obrigatório;
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
             </remarks>
             <response code="200">Registro de Marca atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Marca.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Marcas.MarcaController.Delete(System.Guid)">
             <summary>
             Exclui registro de Marca.
             </summary>
             <param name="id">Identificador (guid) do registro de Marca.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/marca/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Marcas.MarcaController.Get(System.Guid)">
             <summary>
             Retorna Marca especifico por Id (guid).
             </summary>
             <param name="id">Identificador (guid) do registro de Marca.</param>
             <returns></returns>
             <response code="200">Registro de Marca correspondente ao Id.</response>
             <response code="400">Não foi possível localizar o registro de Marca.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Marcas.MarcaController.GetPorTodosOsFiltros(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             Retorna lista paginada de Marcas.
             </summary>
             <returns></returns>
             <param name="nome">Nome.</param>
             <param name="pagina">Página da lista de item.</param>
             <param name="tamanhoPagina">Total de itens por página.</param>
             <param name="ordem">Ordenação: Id, Nome, DataCadastro.</param>
             <response code="200">O recurso solicitado foi processado e retornado com sucesso.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.PedidosStatus.PedidoStatusController.Post(GestaoDePessoas.Application.ViewModels.PedidoStatus.PedidoStatusAdicionarViewModel)">
             <summary>
             Cadastra novo Pedido Status.
             </summary>
             <param name="viewmodel">View Model de Pedido Status.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/pedido-status
                 {
                   "cancelado": true,
                   "finalizado": true,
                   "descricao": "Aguardando"
                 }
                 
                 cancelado -> É opcional;
                 finalizado -> É opcional; 
                 descricao -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
                
                 A aplicação impõe uma restrição que permite o cadastro da descrição do pedido status uma única vez. 
                 
                 Isso garante a unicidade dos registros e impede duplicações no sistema.
                 
             </remarks>
             <response code="201">Novo registro de Pedido Status criado.</response>
             <response code="400">Não foi possível criar o registro de Pedido Status.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.PedidosStatus.PedidoStatusController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.PedidoStatus.PedidoStatusAtualizarViewModel)">
             <summary>
             Atualiza registro Pedido Status. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Pedido Status.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/pedido-status/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "ativo": true,
                   "cancelado": true,
                   "finalizado": true,
                   "descricao": "Aguardando"
                 }
                 
                 id -> É obrigatório;
                 cancelado -> É opcional;
                 finalizado -> É opcional;
                 descricao -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
                 
             </remarks>
             <response code="200">Registro de Pedido Status atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Pedido Status.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.PedidosStatus.PedidoStatusController.Delete(System.Guid)">
             <summary>
             Exclui registro de Pedido Status.
             </summary>
             <param name="id">Identificador (guid) do registro de Pedido Status.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/pedido-status/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.PedidosStatus.PedidoStatusController.Get(System.Guid)">
             <summary>
             Retorna Pedido Status especifico por Id (guid).
             </summary>
             <param name="id">Identificador (guid) do registro de Pedido Status.</param>
             <returns></returns>
             <response code="200">Registro de Pedido Status correspondente ao Id.</response>
             <response code="400">Não foi possível localizar o registro de Pedido Status.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.PedidosStatus.PedidoStatusController.GetPorTodosOsFiltros(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             Retorna lista paginada de Pedido Status.
             </summary>
             <returns></returns>
             <param name="descricao">Descrição.</param>
             <param name="pagina">Página da lista de item.</param>
             <param name="tamanhoPagina">Total de itens por página.</param>
             <param name="ordem">Ordenação: Id, Descricao, DataCadastro.</param>
             <response code="200">O recurso solicitado foi processado e retornado com sucesso.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Pedidos.PedidoController.Post(GestaoDePessoas.Application.ViewModels.Pedido.PedidoAdicionarViewModel)">
             <summary>
             Cadastra novo Pedido.
             </summary>
             <param name="viewmodel">View Model de Pedido.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/pedido
                 {
                   "desconto": 19.99,
                   "clienteID": "00000000-0000-0000-0000-000000000000",
                   "formaPagamentoID": "00000000-0000-0000-0000-000000000000",
                   "pedidoStatusID": "00000000-0000-0000-0000-000000000000",
                   "valortotal": 59.75,
                   "valorfinal": 39.76,
                   "numeropedido": 157486,
                   "quantidadeitens": 3,
                   "pedidoItens": [
                     {
                         "produtoID": "00000000-0000-0000-0000-000000000000",
                         "quantidade": 3
                     }
                   ]
                 }
                 
                 desconto -> É obrigatório;
                 clienteID -> É obrigatório;
                 formaPagamentoID -> É obrigatório;
                 pedidoStatusID -> É obrigatório;
                 valortotal -> É obrigatório;
                 valorfinal -> É obrigatório;
                 numeropedido -> É obrigatório;
                 quantidadeitens -> É obrigatório;
                 
                 pedidoItens -> produtoID -> É obrigatório;   
                                quantidade -> É obrigatório;   
                 
             
             </remarks>
             <response code="201">Novo registro de Pedido criado.</response>
             <response code="400">Não foi possível criar o registro de Pedido.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Pedidos.PedidoController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.Pedido.PedidoAtualizarViewModel)">
             <summary>
             Atualiza registro Pedido. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Pedido.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/pedido/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "desconto": 19.99,
                   "clienteID": "00000000-0000-0000-0000-000000000000",
                   "formaPagamentoID": "00000000-0000-0000-0000-000000000000",
                   "pedidoStatusID": "00000000-0000-0000-0000-000000000000",
                   "valortotal": 59.75,
                   "valorfinal": 39.76,
                   "numeropedido": 157486,
                   "quantidadeitens": 3
                 }
                 
                 id -> É obrigatório;
                 desconto -> É obrigatório;
                 clienteID -> É obrigatório;
                 formaPagamentoID -> É obrigatório;
                 pedidoStatusID -> É obrigatório;
                 valortotal -> É obrigatório;
                 valorfinal -> É obrigatório;
                 numeropedido -> É obrigatório;
                 quantidadeitens -> É obrigatório;  
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
             </remarks>
             <response code="200">Registro de Pedido atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Pedido.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Pedidos.PedidoController.Delete(System.Guid)">
             <summary>
             Exclui registro de Pedido.
             </summary>
             <param name="id">Identificador (guid) do registro de Pedido.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/pedido/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Pedidos.PedidoController.Get(System.Guid)">
             <summary>
             Retorna Pedido especifico por Id (guid).
             </summary>
             <param name="id">Identificador (guid) do registro de Pedido.</param>
             <returns></returns>
             <response code="200">Registro de Pedido correspondente ao Id.</response>
             <response code="400">Não foi possível localizar o registro de Pedido.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Pedidos.PedidoController.GetPorTodosOsFiltros(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             Retorna lista paginada de Pedidos.
             </summary>
             <returns></returns>
             <param name="numero">Número do Pedido.</param>
             <param name="pagina">Página da lista de item.</param>
             <param name="tamanhoPagina">Total de itens por página.</param>
             <param name="ordem">Ordenação: Id, NumeroPedido, DataCadastro.</param>
             <response code="200">O recurso solicitado foi processado e retornado com sucesso.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Produtos.ProdutoController.Post(GestaoDePessoas.Application.ViewModels.Produto.ProdutoAdicionarViewModel)">
             <summary>
             Cadastra novo Produto.
             </summary>
             <param name="viewmodel">View Model de Produto.</param>
             <returns>Resultado da operação.</returns>
             /// <remarks>
             Exemplo de requisição
            
                 POST /api/v1/produto
                 {
                   "marcaID": "00000000-0000-0000-0000-000000000000",
                   "categoriaID": "00000000-0000-0000-0000-000000000000",
                   "precoUnitario": 15.99,
                   "unidade": "UN",
                   "cbarra": "1774",
                   "nome": "Bolo de brigadeiro"
                 }
                 
                 marcaID -> É obrigatório;
                 categoriaID -> É obrigatório;
                 precoUnitario -> É obrigatório;
                 unidade -> Deve ter no mínimo 1 e no máximo 10 caracteres (É obrigatório);
                 cbarra -> Deve ter no mínimo 1 e no máximo 50 caracteres (É obrigatório);
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);   
                 
                 A aplicação impõe uma restrição que permite o cadastro do nome do produto uma única vez. 
                 
                 Isso garante a unicidade dos registros e impede duplicações no sistema.
                 
             </remarks>
             <response code="201">Novo registro de Produto criado.</response>
             <response code="400">Não foi possível criar o registro de Produto.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Produtos.ProdutoController.Put(System.Guid,GestaoDePessoas.Application.ViewModels.Produto.ProdutoAtualizarViewModel)">
             <summary>
             Atualiza registro Produto. 
             </summary>
             <param name="id">Id do registro.</param>
             <param name="viewmodel">View Model de Produto.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 PUT /api/v1/produto/00000000-0000-0000-0000-000000000000
                 {
                   "id" : "00000000-0000-0000-0000-000000000000",
                   "marcaID": "00000000-0000-0000-0000-000000000000",
                   "categoriaID": "00000000-0000-0000-0000-000000000000",
                   "precoUnitario": 15.99,
                   "cbarra": "1774",
                   "unidade": "UN",
                   "nome": "Bolo de brigadeiro"
                 }
                 
                 id -> É obrigatório;
                 marcaID -> É obrigatório;
                 categoriaID -> É obrigatório;
                 precoUnitario -> É obrigatório;
                 cbarra -> Deve ter no mínimo 1 e no máximo 50 caracteres (É obrigatório);
                 unidade -> Deve ter no mínimo 1 e no máximo 10 caracteres (É obrigatório);
                 nome -> Deve ter no mínimo 1 e no máximo 250 caracteres (É obrigatório);   
            
                 Obs: O valor do campo "id" deve coincidir com o valor fornecido na consulta.
                 
             </remarks>
             <response code="200">Registro de Produto atualizado.</response>
             <response code="400">Não foi possível atualizar o registro de Produto.</response>
             
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Produtos.ProdutoController.Delete(System.Guid)">
             <summary>
             Exclui registro de Produto.
             </summary>
             <param name="id">Identificador (guid) do registro de Produto.</param>
             <returns></returns>
             /// <remarks>
             Exemplo de requisição
            
                 DELETE /api/v1/produto/00000000-0000-0000-0000-000000000000
                 {
                 }
            
             </remarks>
             <response code="200">Registro excluído com sucesso.</response>
             <response code="400">Não foi possível excluir o registro.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Produtos.ProdutoController.Get(System.Guid)">
             <summary>
             Retorna Produto especifico por Id (guid).
             </summary>
             <param name="id">Identificador (guid) do registro de Produto.</param>
             <returns></returns>
             <response code="200">Registro de Produto correspondente ao Id.</response>
             <response code="400">Não foi possível localizar o registro de Produto.</response>
            
        </member>
        <member name="M:GestaoDePessoas.API.V1.Controllers.Produtos.ProdutoController.GetPorTodosOsFiltros(System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
             <summary>
             Retorna lista paginada de Produtos.
             </summary>
             <returns></returns>
             <param name="nome">Nome.</param>
             <param name="idMarca">Id Marca.</param>
             <param name="idCategoria">Id Categoria.</param>
             <param name="cbarra">Código de barra.</param>
             <param name="unidade">Unidade.</param>
             <param name="pagina">Página da lista de item.</param>
             <param name="tamanhoPagina">Total de itens por página.</param>
             <param name="ordem">Ordenação: Id, Nome, Marca, Cbarra, Unidade, DataCadastro.</param>
             <response code="200">O recurso solicitado foi processado e retornado com sucesso.</response>
            
        </member>
    </members>
</doc>
