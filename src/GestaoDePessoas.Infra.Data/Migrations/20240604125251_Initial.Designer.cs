// <auto-generated />
using System;
using GestaoDePessoas.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoDePessoas.Infra.Data.Migrations
{
    [DbContext(typeof(GestaoDePessoasContext))]
    [Migration("20240604125251_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestaoDePessoas.Dominio.CategoriaRoot.Categoria", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NOME");

                    b.HasKey("ID");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.ClienteRoot.Cliente", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<string>("CNPJ_CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasColumnName("CNPJ_CPF");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NOME");

                    b.Property<string>("RAZAO")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("RAZAO");

                    b.HasKey("ID");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.ContatoRoot.Contato", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<Guid?>("ClienteID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("DESCRICAO")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRICAO");

                    b.Property<float>("TIPOCONTATO")
                        .HasColumnType("float")
                        .HasColumnName("TIPOCONTATO");

                    b.Property<string>("VALORCONTATO")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("VALORCONTATO");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.ToTable("CONTATO", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.EnderecoRoot.Endereco", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<string>("BAIRRO")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(9)")
                        .HasColumnName("CEP");

                    b.Property<string>("CIDADE")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CIDADE");

                    b.Property<float?>("CODIGOPOSTAL")
                        .HasColumnType("float")
                        .HasColumnName("CODIGOPOSTAL");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("ESTADO")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ESTADO");

                    b.Property<float?>("NUMERO")
                        .HasColumnType("float")
                        .HasColumnName("NUMERO");

                    b.Property<string>("RUA")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("RUA");

                    b.Property<Guid>("clienteID")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("clienteID");

                    b.ToTable("ENDERECO", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.FormaPagamentoRoot.FormaPagamento", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("DESCRICAO")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NOME");

                    b.Property<float>("TAXA")
                        .HasColumnType("float")
                        .HasColumnName("TAXA");

                    b.HasKey("ID");

                    b.ToTable("FORMAPAGAMENTO", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.MarcaRoot.Marca", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NOME");

                    b.HasKey("ID");

                    b.ToTable("MARCA", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.PedidoItemRoot.PedidoItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<Guid>("PedidoID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProdutoID")
                        .HasColumnType("char(36)")
                        .HasColumnName("ProdutoID");

                    b.Property<int>("QUANTIDADE")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.HasKey("ID");

                    b.HasIndex("PedidoID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("PEDIDOITEM", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.PedidoRoot.Pedido", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<Guid>("ClienteID")
                        .HasColumnType("char(36)")
                        .HasColumnName("ClienteID");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<decimal?>("DESCONTO")
                        .IsRequired()
                        .HasColumnType("decimal(15,5)")
                        .HasColumnName("DESCONTO");

                    b.Property<Guid>("FormaPagamentoID")
                        .HasColumnType("char(36)")
                        .HasColumnName("FormaPagamentoID");

                    b.Property<int>("NUMEROPEDIDO")
                        .HasColumnType("int")
                        .HasColumnName("NUMEROPEDIDO");

                    b.Property<Guid>("PedidoStatusID")
                        .HasColumnType("char(36)")
                        .HasColumnName("PedidoStatusID");

                    b.Property<double>("QUANTIDADEITENS")
                        .HasColumnType("double");

                    b.Property<decimal>("VALORFINAL")
                        .HasColumnType("decimal(15,5)")
                        .HasColumnName("VALORFINAL");

                    b.Property<decimal>("VALORTOTAL")
                        .HasColumnType("decimal(15,5)")
                        .HasColumnName("VALORTOTAL");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("FormaPagamentoID");

                    b.HasIndex("PedidoStatusID");

                    b.ToTable("PEDIDO", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.PedidoStatusRoot.PedidoStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<ulong>("CANCELADO")
                        .HasColumnType("bit")
                        .HasColumnName("CANCELADO");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<string>("DESCRICAO")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DESCRICAO");

                    b.Property<ulong>("FINALIZADO")
                        .HasColumnType("bit")
                        .HasColumnName("FINALIZADO");

                    b.HasKey("ID");

                    b.ToTable("PEDIDOSTATUS", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.ProdutoRoot.Produto", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<ulong>("ATIVO")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<string>("CBARRA")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CBARRA");

                    b.Property<Guid>("CategoriaID")
                        .HasColumnType("char(36)")
                        .HasColumnName("CategoriaID");

                    b.Property<DateTime>("DATAHORACADASTRO")
                        .HasColumnType("datetime")
                        .HasColumnName("DATAHORACADASTRO");

                    b.Property<Guid>("MarcaID")
                        .HasColumnType("char(36)")
                        .HasColumnName("MarcaID");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("PRECOUNITARIO")
                        .HasColumnType("decimal(15,5)")
                        .HasColumnName("PRECOUNITARIO");

                    b.Property<string>("UNIDADE")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("UNIDADE");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("MarcaID");

                    b.ToTable("PRODUTO", (string)null);
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.ContatoRoot.Contato", b =>
                {
                    b.HasOne("GestaoDePessoas.Dominio.ClienteRoot.Cliente", null)
                        .WithMany("Contatos")
                        .HasForeignKey("ClienteID");
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.EnderecoRoot.Endereco", b =>
                {
                    b.HasOne("GestaoDePessoas.Dominio.ClienteRoot.Cliente", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("clienteID")
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.PedidoItemRoot.PedidoItem", b =>
                {
                    b.HasOne("GestaoDePessoas.Dominio.PedidoRoot.Pedido", null)
                        .WithMany("PedidoItens")
                        .HasForeignKey("PedidoID")
                        .IsRequired();

                    b.HasOne("GestaoDePessoas.Dominio.ProdutoRoot.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID")
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.PedidoRoot.Pedido", b =>
                {
                    b.HasOne("GestaoDePessoas.Dominio.ClienteRoot.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .IsRequired();

                    b.HasOne("GestaoDePessoas.Dominio.FormaPagamentoRoot.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoID")
                        .IsRequired();

                    b.HasOne("GestaoDePessoas.Dominio.PedidoStatusRoot.PedidoStatus", "PedidoStatus")
                        .WithMany()
                        .HasForeignKey("PedidoStatusID")
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("FormaPagamento");

                    b.Navigation("PedidoStatus");
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.ProdutoRoot.Produto", b =>
                {
                    b.HasOne("GestaoDePessoas.Dominio.CategoriaRoot.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .IsRequired();

                    b.HasOne("GestaoDePessoas.Dominio.MarcaRoot.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaID")
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.ClienteRoot.Cliente", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("GestaoDePessoas.Dominio.PedidoRoot.Pedido", b =>
                {
                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
